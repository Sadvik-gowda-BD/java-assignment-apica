version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - user-net
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "user-events:1:1"
    depends_on:
      - zookeeper
    networks:
      - user-net

  mysqldb:
    image: "mysql:8.0.27"
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: user
      MYSQL_USER: test
      MYSQL_PASSWORD: java
      MYSQL_ROOT_PASSWORD: java
    networks:
      - user-net

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    depends_on:
      - kafka
      - mysqldb
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - user-net

  journal-service:
    build:
      context: ./journal-service
      dockerfile: Dockerfile
    ports:
      - "8091:8091"
    depends_on:
      - kafka
      - mysqldb
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - user-net

networks:
  user-net:
    driver: bridge